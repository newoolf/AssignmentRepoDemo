import { useState, useEffect } from 'react'
import { getDatabase, ref, set } from 'firebase/database'
import { fhirclient } from 'fhirclient/lib/types'


export const useAddPatient = (
    patientId: string,
    patientName: string,
    patientEmail: string,
    medications: fhirclient.FHIR.Bundle
) => {
    const [error, setError] = useState<string | null>(null)
    const [success, setSuccess] = useState<boolean>(false)

    useEffect(() => {
        const db = getDatabase()
        const patientRef = ref(db, `patients/${patientId}`)

        // Convert medications array into an object with IDs like med1, med2, etc.
        const medicationsObject: { [key: string]: fhirclient.FHIR.Resource } = {}
        medications.entry?.forEach((entry, index) => {
            const med = entry.resource;
            medicationsObject[`${med.id}`] = {
                id: med.id,
                code: med.medicationCodeableConcept.text || med.medicationCodeableConcept.coding?.[0]?.display || 'Unknown Medication',
                status: med.status,
                asNeeded: med.dosageInstruction?.[0]?.asNeeded || false,
                dosageInstruction: med.dosageInstruction?.[0]?.text || 'No dosage instruction provided',
            }
        })

        const patientData = {
            id: patientId,
            name: patientName,
            email: patientEmail,
            medications: medicationsObject
        }

        set(patientRef, patientData)
            .then(() => {
                console.log('Patient added successfully')
                setSuccess(true)
            })
            .catch((err) => {
                console.error('Error adding patient:', err)
                setError(`Failed to add patient: ${err.message}`)
            })
    }, [patientId, patientName, patientEmail, medications])

    return { success, error }
}
